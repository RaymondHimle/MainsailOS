#!/usr/bin/env bash
#
# Based on:
# https://github.com/armbian/build/blob/master/packages/bsp/common/etc/update-motd.d/10-armbian-header

# Copyright (c) Authors: https://www.armbian.com/authors
#
# This file is licensed under the terms of the GNU General Public
# License version 2. This program is licensed "as is" without any
# warranty of any kind, whether express or implied.

# Modified by Stephan Wendel aka KwadFan
# All changes made are public at
# https://github.com/mainsail-crew/MainsailOS

# shellcheck enable=require-variable-braces

# shellcheck disable=SC1091
[[ -f /etc/armbian-release-info.txt ]] && . /etc/armbian-release-info.txt

if [[ -f /etc/armbian-distribution-status ]]; then
    . /etc/armbian-distribution-status
    [[ -f /etc/lsb-release ]] && DISTRIBUTION_CODENAME=$(grep CODENAME /etc/lsb-release | cut -d"=" -f2)
    [[ -z "${DISTRIBUTION_CODENAME}" && -f /etc/os-release ]] && DISTRIBUTION_CODENAME=$(grep VERSION_CODENAME /etc/os-release | cut -d"=" -f2)
    [[ -z "${DISTRIBUTION_CODENAME}" && -x /usr/bin/lsb_release ]] && DISTRIBUTION_CODENAME=$(/usr/bin/lsb_release -c | cut -d":" -f2 | tr -d "\t")
    DISTRIBUTION_STATUS=$(grep "${DISTRIBUTION_CODENAME}" /etc/armbian-distribution-status | cut -d"=" -f2)
fi
[[ -f /etc/default/armbian-motd ]] && . /etc/default/armbian-motd

for f in ${MOTD_DISABLE}; do
    [[ "${f}" == "${THIS_SCRIPT}" ]] && exit 0
done


KERNELID=$(uname -r)

# Odroid N2 exception
ODROID_EXCEPTION="$(tr -d '\000' < /proc/device-tree/model | grep ODROID | grep Plus)"
[[ -f /proc/device-tree/model ]] && [[ -n "${ODROID_EXCEPTION}" ]] && BOARD_NAME+="+"


echo -e "\e[31m$(toilet -f big MainsailOS)\e[0m"
echo -e "Version $(cut -d ' ' -f3 /etc/mainsailos-release), based on \
\e[34mArmbian ${VERSION} ${DISTRIBUTION_CODENAME^}\e[0m $([[ ${BRANCH} == edge ]])"
echo -e "Running on \e[34m$(echo "${BOARD_NAME}" | sed 's/Orange Pi/OPi/' | \
sed 's/NanoPi/NPi/' | sed 's/Banana Pi/BPi/')\e[0m with \e[34mLinux ${KERNELID}\e[0m\n"

# displaying status warnings

if [[ "${IMAGE_TYPE}" != "stable" ]]; then
    [[ "${IMAGE_TYPE}" == "user-built" ]] && UNSUPPORTED_TEXT="built from trunk"
    [[ "${IMAGE_TYPE}" == "nightly" ]] && UNSUPPORTED_TEXT="untested automated build"
else
    [[ "${BOARD_TYPE}" == "csc" || "${BOARD_TYPE}" == "tvb" ]] && UNSUPPORTED_TEXT="community creations"
    [[ "${BOARD_TYPE}" == "wip" ]] && UNSUPPORTED_TEXT="work in progress"
    [[ "${BOARD_TYPE}" == "eos" ]] && UNSUPPORTED_TEXT="end of life"
fi

if [[ -n ${DISTRIBUTION_STATUS} && ${DISTRIBUTION_STATUS} != supported ]]; then
    [[ -n ${UNSUPPORTED_TEXT} ]] && UNSUPPORTED_TEXT+=" & "
    UNSUPPORTED_TEXT+="unsupported (${DISTRIBUTION_CODENAME}) userspace!"
fi

if [[ -n ${UNSUPPORTED_TEXT} ]]; then
    echo -e "\e[0;91mNo end-user support: \x1B[0m${UNSUPPORTED_TEXT}\n"
fi
